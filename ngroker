#! /usr/bin/env bash

#
# ngroker, a tiny helper for launching ngrok sessions with my colleagues.
#
# Requires jq, jl, ngrok.
#
# Optional env variables:
#   DEBUG=1 to enable some debugging
#   COLOR=(never|always) to turn on/off coloring and emojis.
#
# Note: you can also use gh-auth ('gem install github-auth') to allow your
# colleagues to access your session using by allowing their pub key stored
# on Github.

# Turn on coloring only if the current shell is interactive (or
# COLOR=always)
#
# IMPORTANT: use printf instead of "echo -e" when you want to render
# colors; echo -e is not supported BSD versions of /bin/echo (like on
# macOS).
if [ -t 1 ] || [ "$COLOR" = always ] && [ "$COLOR" != never ]; then
    gray='\033[90m'
    red='\033[91m'
    blue='\033[94m'
    green='\033[92m'
    yel='\033[93m'
    end='\033[0m'
    ok='✅  '
    broom='🧹  '
    earth='🌍  '
    err='❌  '
fi

if ! command -v tmux >/dev/null 2>&1; then
    printf "${err}${red}Error:${end} tmux not found, install it with:\n" >&2
    printf "    ${gray}brew install tmux)${end}\n" >&2
    exit 1
fi

if ! command -v jl >/dev/null 2>&1; then
    printf "${err}${red}Error:${end} jl not found, install it with:\n" >&2
    printf "    ${gray}brew install koenbollen/public/jl)${end}\n" >&2
    exit 1
fi

if ! command -v ngrok >/dev/null 2>&1; then
    printf "${err}${red}Error:${end} ngrok not found, install it with:\n" >&2
    printf "    ${gray}brew cask install ngrok${end}\n" >&2
    exit 1
fi

if ! command -v jq >/dev/null 2>&1; then
    printf "${err}${red}Error:${end} ngrok not found, install it with:\n" >&2
    printf "    ${gray}brew install jq${end}\n" >&2
    exit 1
fi

if ! [ -f ~/.ngrok2/ngrok.yml ]; then
    printf "${err} Not logged in to ngrok. To sign up & log in to ngrok, go to:\n" >&2
    printf "    ${blue}https://dashboard.ngrok.com/get-started/setup${end}\n" >&2
    printf "and then copy-paste the 'authtoken' and run:\n" >&2
    printf "    ngrok authtoken ${gray}<your-auth-token>${end}\n" >&2
    exit 1
fi

if [ $# -lt 1 ]; then
    printf "${err} ${red}Usage:${end} $(basename $0) ${gray}<github-username>${end}\n" >&2
    exit 1
fi

tmux has-session -t ngroker || tmux new -s ngroker -d

usernames=()
while [ "$#" -gt 0 ]; do
    case "$1" in
    --update)
        curl -sL https://raw.githubusercontent.com/maelvls/ngroker/master/ngroker >/tmp/ngroker
        if ! diff -q /tmp/ngroker "$0" >/dev/null; then
            printf "${ok}Already using the latest version\n"
            exit 0
        fi

        if ! [ -w "$0" ]; then
            sudo install /tmp/ngroker "$(dirname "$0")"
        else
            install /tmp/ngroker "$(dirname "$0")"
        fi
        printf "${ok}${green}Note:${end} successfully updated to latest version\n"
        exit 0
        ;;
    *) usernames+=("$1") ;;
    esac
done

rm -rf /tmp/pub
mkdir -p ~/.ssh
for username in "${usernames[@]}"; do
    if ! curl -s "https://github.com/$username.keys" >/tmp/pub; then
        printf "${err} Github username '$username' not found\n" >&2
        exit 1
    fi
    while read -r pubkey; do
        echo "command=\"$(command -v tmux) attach -t ngroker\" $pubkey https://github.com/$username" >>~/.ssh/authorized_keys
    done </tmp/pub
    printf "${earth}${green}Note:${end} Added $(wc -l /tmp/pub) key(s) from ${blue}https://github.com/${yel}$username${blue}.keys${end} to ~/.ssh/authorized_keys\n"
done

trap cleanup_authorized_keys EXIT # HUP INT TERM
cleanup_authorized_keys() {
    code=$?
    for username in "${usernames[@]}"; do
        sed -i~ "/github.com\/$username/d" ~/.ssh/authorized_keys
        printf "${broom}Cleaned up ${yel}$username${end}'s pub keys from ~/.ssh/authorized_keys\n"
    done
    exit $code
}

ngrok tcp 22 --region=eu --log=stdout --log-format=json | tee >(jl >/dev/stderr) | while read -r line; do
    if url=$(echo "$line" | jq --exit-status -r '.url'); then
        port=$(echo "$url" | cut -d: -f3)
        host=$(echo "$url" | cut -d: -f2 | tr -d '/')
        [ -z "$DEBUG" ] || printf "url found: $yel$url$end\n"
        [ -z "$DEBUG" ] || printf "port found: $yel$port$end\n"
        [ -z "$DEBUG" ] || printf "host found: $yel$host$end\n"

        cmd="ssh $USER@$host -p $port"

        printf "${ok}${green}Note:${end} ngrok is running! Next steps:\n"
        printf "First, copy this command and give it to ${yel}${usernames[*]}${end}:\n"
        printf "    $blue$cmd$end\n"
        printf "Then, open tmux with the command:\n"
        printf "    ${blue}tmux attach -t ngroker${end}\n"
    fi
done
